#!/bin/bash
set -xe
export DEBIAN_FRONTEND=noninteractive

# Create the apt config directory if it doesn't exist
sudo mkdir -p /etc/apt/apt.conf.d

# Write the IPv4 enforcement setting
echo 'Acquire::ForceIPv4 "true";' | sudo tee /etc/apt/apt.conf.d/99force-ipv4 > /dev/null

# Update system packages
sudo apt update && sudo apt upgrade -y

# Install dependencies
sudo apt install -y curl apt-transport-https gnupg2 software-properties-common

# Import Elastic's signing key
wget -qO - https://artifacts.elastic.co/GPG-KEY-elasticsearch | sudo apt-key add -

# Add Elastic repository
echo "deb https://artifacts.elastic.co/packages/8.x/apt stable main" | sudo tee /etc/apt/sources.list.d/elastic-8.x.list

# Update package list
sudo apt update

# Install logstash
sudo apt install -y logstash

# Create logstash configuration directories if they don't exist
sudo mkdir -p /etc/logstash/conf.d/

# Create basic pipeline configuration
sudo cat > /etc/logstash/conf.d/01-beats-input.conf << EOF
input {
  beats {
    port => 5044
  }
  tcp {
    port => 5000
  }
  udp {
    port => 5000
  }
}
EOF

sudo cat > /etc/logstash/conf.d/30-elasticsearch-output.conf << EOF
output {
  elasticsearch {
    hosts => ["${elasticsearch_host}:9200"]
    manage_template => false
    index => "%{[@metadata][beat]}-%{[@metadata][version]}-%{+YYYY.MM.dd}"
  }
}
EOF

sudo cat > /etc/logstash/conf.d/20-filter.conf << EOF
filter {
  if [fields][environment] == "${environment}" {
    mutate {
      add_field => { "environment" => "${environment}" }
    }
  }
}
EOF

# Set proper ownership and permissions
sudo chown -R logstash:logstash /etc/logstash/conf.d/
sudo chmod 644 /etc/logstash/conf.d/*

# Setup JVM options
sudo cat > /etc/logstash/jvm.options.d/heap.options << EOF
-Xms512m
-Xmx512m
EOF

# Start and enable Logstash service
sudo systemctl daemon-reload
sudo systemctl enable logstash
sudo systemctl start logstash

# Add hostname and IP to environment for debugging
HOSTNAME=$(hostname)
PRIVATE_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)
PUBLIC_IP=$(curl -s http://169.254.169.254/latest/meta-data/public-ipv4 || echo "None")

echo "Logstash installation completed successfully on $HOSTNAME ($PRIVATE_IP / $PUBLIC_IP)"
echo "Forwarding logs to Elasticsearch at ${elasticsearch_host}:9200"