#!/bin/bash
set -xe
export DEBIAN_FRONTEND=noninteractive

# Export Elasticsearch configuration variables
export ES_VERSION="${elasticsearch_version}"
export CLUSTER_NAME="${cluster_name}"
export NODE_INDEX="${node_index}"
export ENABLE_UI="${enable_ui}"

# Create the apt config directory if it doesn't exist
sudo mkdir -p /etc/apt/apt.conf.d

# Write the IPv4 enforcement setting
echo 'Acquire::ForceIPv4 "true";' | sudo tee /etc/apt/apt.conf.d/99force-ipv4 > /dev/null

# Update system packages
sudo apt update && sudo apt upgrade -y

# Install dependencies
sudo apt install -y curl gnupg2 software-properties-common jq unzip apt-transport-https

# Set up Elasticsearch repository
wget -qO - https://artifacts.elastic.co/GPG-KEY-elasticsearch | sudo apt-key add -
echo "deb https://artifacts.elastic.co/packages/7.x/apt stable main" | sudo tee -a /etc/apt/sources.list.d/elastic-7.x.list

# Update package list
sudo apt update

# Install Elasticsearch
sudo apt install -y elasticsearch=$ES_VERSION

# Get the instance's private IP
PRIVATE_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)

# Configure Elasticsearch
sudo tee /etc/elasticsearch/elasticsearch.yml > /dev/null << EOF
# Cluster name
cluster.name: $CLUSTER_NAME

# Node name
node.name: $CLUSTER_NAME-node-$NODE_INDEX

# Data and log paths
path.data: /var/lib/elasticsearch
path.logs: /var/log/elasticsearch

# Network settings
network.host: $PRIVATE_IP
http.port: 9200
discovery.seed_hosts: ["$PRIVATE_IP"]
cluster.initial_master_nodes: ["$CLUSTER_NAME-node-$NODE_INDEX"]

# JVM heap size
discovery.type: single-node

# Allow cross-origin access (for Kibana)
http.cors.enabled: true
http.cors.allow-origin: "*"
http.cors.allow-methods: OPTIONS, HEAD, GET, POST, PUT, DELETE
http.cors.allow-headers: X-Requested-With,X-Auth-Token,Content-Type,Content-Length,Authorization
EOF

# Configure JVM heap size (50% of system memory, up to 32G)
SYSTEM_MEMORY=$(grep MemTotal /proc/meminfo | awk '{print $2}')
HEAP_SIZE=$(echo "$SYSTEM_MEMORY / 2" | bc)
HEAP_SIZE_MB=$(echo "$HEAP_SIZE / 1024" | bc)
MAX_HEAP_SIZE=32768  # 32GB in MB

if [ $HEAP_SIZE_MB -gt $MAX_HEAP_SIZE ]; then
  HEAP_SIZE_MB=$MAX_HEAP_SIZE
fi

sudo tee /etc/elasticsearch/jvm.options.d/heap.options > /dev/null << EOF
-Xms${HEAP_SIZE_MB}m
-Xmx${HEAP_SIZE_MB}m
EOF

# Set up system limits
sudo tee /etc/security/limits.d/elasticsearch.conf > /dev/null << EOF
elasticsearch soft nofile 65535
elasticsearch hard nofile 65535
elasticsearch soft memlock unlimited
elasticsearch hard memlock unlimited
EOF

# Set bootstrap.memory_lock=true in elasticsearch.yml
sudo tee -a /etc/elasticsearch/elasticsearch.yml > /dev/null << EOF
bootstrap.memory_lock: true
EOF

# Set up systemd override to allow memory locking
sudo mkdir -p /etc/systemd/system/elasticsearch.service.d
sudo tee /etc/systemd/system/elasticsearch.service.d/override.conf > /dev/null << EOF
[Service]
LimitMEMLOCK=infinity
EOF

# Enable and start Elasticsearch service
sudo systemctl daemon-reload
sudo systemctl enable elasticsearch
sudo systemctl start elasticsearch

# Install Kibana if UI is enabled
if [ "$ENABLE_UI" = "true" ]; then
  # Install Kibana
  sudo apt install -y kibana
  
  # Configure Kibana
  sudo tee /etc/kibana/kibana.yml > /dev/null << EOF
server.port: 5601
server.host: "0.0.0.0"
elasticsearch.hosts: ["http://$PRIVATE_IP:9200"]
EOF
  
  # Enable and start Kibana
  sudo systemctl enable kibana
  sudo systemctl start kibana
  
  echo "Kibana is accessible at: http://$(curl -s http://169.254.169.254/latest/meta-data/public-ipv4):5601"
fi

# Wait for Elasticsearch to start
echo "Waiting for Elasticsearch to start..."
until curl -s "http://localhost:9200" > /dev/null; do
  sleep 10
done

# Check Elasticsearch status
curl -X GET "http://localhost:9200/_cluster/health?pretty"

echo "Elasticsearch installation completed successfully"